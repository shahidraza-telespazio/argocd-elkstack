eck-beats:
  enabled: true
  metadata:
  name: filebeat-config
  namespace: logging
  labels:
    kubernetes.io/cluster-service: "true"
  spec:
    type: filebeat
    elasticsearchRef:
      name: elasticsearch
    daemonSet:
      podTemplate:
        spec:
          serviceAccountName: filebeat
          automountServiceAccountToken: true
          terminationGracePeriodSeconds: 30
          tolerations:
            - key: dedicated
              operator: Exists
              effect: NoSchedule
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true # Allows to provide richer host metadata
          containers:
            - name: filebeat
              securityContext:
                runAsUser: 0
                # If using Red Hat OpenShift uncomment this:
                #privileged: true
              volumeMounts:
                - name: varlogcontainers
                  mountPath: /var/log/containers
                - name: varlogpods
                  mountPath: /var/log/pods
                - name: varlibdockercontainers
                  mountPath: /var/lib/docker/containers
              env:
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
              resources:
                limits:
                  cpu: 500m
                  memory: 2000Mi
                requests:
                  cpu: 100m
                  memory: 200Mi
          volumes:
            - name: varlogcontainers
              hostPath:
                path: /var/log/containers
            - name: varlogpods
              hostPath:
                path: /var/log/pods
            - name: varlibdockercontainers
              hostPath:
                path: /var/lib/docker/containers
    config:
      filebeat.yml: |-
        filebeat.config:
        #  inputs:
        #    path: ${path.config}/inputs.d/*.yml
        #    reload.enabled: true
          modules:
            path: ${path.config}/modules.d/*.yml
            reload.enabled: true
        filebeat.autodiscover:
          providers:
            - type: kubernetes
              hints.enabled: true
              include_annotations: ["artifact.spinnaker.io/name","ad.datadoghq.com/tags"]
              include_labels: ["app.kubernetes.io/name"]
              labels.dedot: true
              annotations.dedot: true
              templates:
                - condition:
                    equals:
                      kubernetes.namespace: myapp   #Set the namespace in which your app is running, can add multiple conditions in case of more than 1 namespace.
                  config:
                    - type: docker
                      containers.ids:
                        - "${data.kubernetes.container.id}"
                      multiline:
                        pattern: '^[A-Za-z ]+[0-9]{2} (?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)'.   #Timestamp regex for the app logs. Change it as per format. 
                        negate: true
                        match: after
                - condition:
                    equals:
                      kubernetes.namespace: elasticsearch
                  config:
                    - type: docker
                      containers.ids:
                        - "${data.kubernetes.container.id}"
                      multiline:
                        pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}|^[0-9]{4}-[0-9]{2}-[0-9]{2}T'
                        negate: true
                        match: after
                        
        processors:
          - add_cloud_metadata: ~
          - drop_fields:
              when:
                has_fields: ['kubernetes.labels.app']
              fields:
                - 'kubernetes.labels.app'
        output.elasticsearch:
          hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
  serviceAccount:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
  clusterRoleBinding:
    name: filebeat
    namespace: logging
    subjects:
      - kind: ServiceAccount
        name: filebeat
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: filebeat
      apiGroup: rbac.authorization.k8s.io
  clusterRole:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
    rules:
      - apiGroups: [""] # "" indicates the core API group
        resources:
          - namespaces
          - pods
          - nodes
        verbs:
          - get
          - watch
          - list
