eck-beats:
  enabled: true
  metadata:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
      kubernetes.io/cluster-service: "true"
  spec:
    type: filebeat
    elasticsearchRef:
      name: elasticsearch
    daemonSet:
      podTemplate:
        metadata:
          labels:
            k8s-app: filebeat
        spec:
          serviceAccountName: filebeat
          terminationGracePeriodSeconds: 30
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
          containers:
            - name: filebeat
              image: elastic/filebeat:6.5.4
              args: ["-c", "/usr/share/filebeat/filebeat.yml", "-e"]
              env:
                - name: ELASTICSEARCH_HOST
                  value: elasticsearch.elasticsearch
                - name: ELASTICSEARCH_PORT
                  value: "9200"
              securityContext:
                runAsUser: 0
                # If using Red Hat OpenShift uncomment this:
                #privileged: true
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 100Mi
              volumeMounts:
                - name: config
                  mountPath: /usr/share/filebeat/filebeat.yml
                  readOnly: true
                  subPath: filebeat.yml
                - name: inputs
                  mountPath: /usr/share/filebeat/inputs.d
                  readOnly: true
                - name: data
                  mountPath: /usr/share/filebeat/data
                - name: varlibdockercontainers
                  mountPath: /var/lib/docker/containers
                  readOnly: true
          volumes:
            - name: varlogcontainers
              hostPath:
                path: /var/log/containers
            - name: varlogpods
              hostPath:
                path: /var/log/pods
            - name: varlibdockercontainers
              hostPath:
                path: /var/lib/docker/containers
            # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
            - name: data
              hostPath:
                path: /var/lib/filebeat-data
                type: DirectoryOrCreate
    config:
      filebeat.yml: |-
        filebeat.config:
          modules:
            path: ${path.config}/modules.d/*.yml
            reload.enabled: true
        filebeat.autodiscover:
          providers:
            - type: kubernetes
              hints.enabled: true
              include_annotations: ["artifact.spinnaker.io/name","ad.datadoghq.com/tags"]
              include_labels: ["app.kubernetes.io/name"]
              labels.dedot: true
              annotations.dedot: true
              templates:
                - condition:
                    equals:
                      kubernetes.namespace: logging
                  config:
                    - type: docker
                      containers.ids:
                        - "${data.kubernetes.container.id}"
                      multiline:
                        pattern: '^[A-Za-z ]+[0-9]{2} (?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)'
                        negate: true
                        match: after
                - condition:
                    equals:
                      kubernetes.namespace: elasticsearch
                  config:
                    - type: docker
                      containers.ids:
                        - "${data.kubernetes.container.id}"
                      multiline:
                        pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}|^[0-9]{4}-[0-9]{2}-[0-9]{2}T'
                        negate: true
                        match: after
        filebeat.inputs:
          - type: container
            enabled: true
            paths:
              - /var/log/*.log
        processors:
           - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
          - drop_event.when:
              or:
              - equals:
                  kubernetes.namespace: "kube-system"
              - equals:
                  kubernetes.namespace: "logging"  
              - equals:
                  kubernetes.namespace: "ingress-nginx-controller"
              - equals:
                  kubernetes.namespace: "kube-node-lease"
              - equals:
                  kubernetes.namespace: "elastic-system"
        output.elasticsearch:
          hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
  serviceAccount:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
  clusterRoleBinding:
    name: filebeat
    namespace: logging
    subjects:
      - kind: ServiceAccount
        name: filebeat
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: filebeat
      apiGroup: rbac.authorization.k8s.io
  clusterRole:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
    rules:
      - apiGroups: [""]
        resources:
          - namespaces
          - pods
          - nodes
        verbs:
          - get
          - watch
          - list
