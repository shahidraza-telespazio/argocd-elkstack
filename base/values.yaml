eck-beats:
  enabled: true
  metadata:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
      kubernetes.io/cluster-service: "true"
  spec:
    type: filebeat
    elasticsearchRef:
      name: elasticsearch
    daemonSet:
      podTemplate:
        metadata:
          labels:
            k8s-app: filebeat
        spec:
          serviceAccountName: filebeat
          terminationGracePeriodSeconds: 30
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
          containers:
            - name: filebeat
              image: docker.elastic.co/beats/filebeat:8.15.3
              args: ["-c", "/etc/filebeat.yml", "-e"]
              env:
                - name: ELASTICSEARCH_HOST
                  value: elasticsearch
                - name: ELASTICSEARCH_PORT
                  value: "9200"
                - name: ELASTICSEARCH_USERNAME
                  value: elastic
                - name: ELASTICSEARCH_PASSWORD
                  value: 6wRJr3jit726sIm850BS5H6e
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
              securityContext:
                runAsUser: 0
                # If using Red Hat OpenShift uncomment this:
                #privileged: true
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 100Mi
              volumeMounts:
                - name: config
                  mountPath: /etc/filebeat.yml
                  readOnly: true
                  subPath: filebeat.yml
                - name: data
                  mountPath: /usr/share/filebeat/data
                - name: varlibdockercontainers
                  mountPath: /var/lib/docker/containers
                  readOnly: true
                - name: varlog
                  mountPath: /var/log
                  readOnly: true
          volumes:
            - name: config
              configMap:
                defaultMode: 0640
                name: filebeat-config
            - name: varlibdockercontainers
              hostPath:
                path: /var/lib/docker/containers
            - name: varlog
              hostPath:
                path: /var/log
              # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
            - name: data
              hostPath:
                # When filebeat runs as non-root user, this directory needs to be writable by group (g+w).
                path: /var/lib/filebeat-data
                type: DirectoryOrCreate

    config:
      filebeat.yml: |-
        filebeat.inputs:
        - type: filestream
          id: kubernetes-container-logs
          paths:
            - /var/log/containers/*.log
          parsers:
            - container: ~
          prospector:
            scanner:
              fingerprint.enabled: true
              symlinks: true
          file_identity.fingerprint: ~
          processors:
            - add_kubernetes_metadata:
                host: ${NODE_NAME}
                matchers:
                - logs_path:
                    logs_path: "/var/log/containers/"
      # To enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment this:
      # filebeat.autodiscover:
      #  providers:
      #    - type: kubernetes
      #      node: ${NODE_NAME}
      #      hints.enabled: true
      #      hints.default_config:
      #        type: filestream
      #        id: kubernetes-container-logs-${data.kubernetes.pod.name}-${data.kubernetes.container.id}
      #        paths:
      #        - /var/log/containers/*-${data.kubernetes.container.id}.log
      #        parsers:
      #        - container: ~
      #        prospector:
      #         scanner:
      #           fingerprint.enabled: true
      #           symlinks: true
      #        file_identity.fingerprint: ~
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
              - logs_path:
                  logs_path: "/var/log/containers/"
        - drop_event.when:
            or:
              - equals:
                  kubernetes.namespace: "kube-system"
              - equals:
                  kubernetes.namespace: "logging"
              - equals:
                  kubernetes.namespace: "ingress-nginx-controller"
              - equals:
                  kubernetes.namespace: "kube-node-lease"
              - equals:
                  kubernetes.namespace: "elastic-system"
      output.elasticsearch:
        hosts:
          ["${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}"]
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
    # filebeat.yml: |-
    #   filebeat.config:
    #     modules:
    #       path: ${path.config}/modules.d/*.yml
    #       reload.enabled: true
    #   filebeat.autodiscover:
    #     providers:
    #       - type: kubernetes
    #         hints.enabled: true
    #         include_annotations: ["artifact.spinnaker.io/name","ad.datadoghq.com/tags"]
    #         include_labels: ["app.kubernetes.io/name"]
    #         labels.dedot: true
    #         annotations.dedot: true
    #         templates:
    #           - condition:
    #               equals:
    #                 kubernetes.namespace: logging
    #             config:
    #               - type: docker
    #                 containers.ids:
    #                   - "${data.kubernetes.container.id}"
    #                 multiline:
    #                   pattern: '^[A-Za-z ]+[0-9]{2} (?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)'
    #                   negate: true
    #                   match: after
    #           - condition:
    #               equals:
    #                 kubernetes.namespace: elasticsearch
    #             config:
    #               - type: docker
    #                 containers.ids:
    #                   - "${data.kubernetes.container.id}"
    #                 multiline:
    #                   pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}|^[0-9]{4}-[0-9]{2}-[0-9]{2}T'
    #                   negate: true
    #                   match: after
    #   filebeat.inputs:
    #     - type: container
    #       enabled: true
    #       paths:
    #         - /var/log/*.log
    #   processors:
    #      - add_kubernetes_metadata:
    #       host: ${NODE_NAME}
    #       matchers:
    #       - logs_path:
    #           logs_path: "/var/log/containers/"
    #     - drop_event.when:
    #         or:
    #         - equals:
    #             kubernetes.namespace: "kube-system"
    #         - equals:
    #             kubernetes.namespace: "logging"
    #         - equals:
    #             kubernetes.namespace: "ingress-nginx-controller"
    #         - equals:
    #             kubernetes.namespace: "kube-node-lease"
    #         - equals:
    #             kubernetes.namespace: "elastic-system"
    #   output.elasticsearch:
    #     hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
  serviceAccount:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
  clusterRoleBinding:
    name: filebeat
    namespace: logging
    subjects:
      - kind: ServiceAccount
        name: filebeat
        namespace: logging
    roleRef:
      kind: ClusterRole
      name: filebeat
      apiGroup: rbac.authorization.k8s.io
  clusterRole:
    name: filebeat
    namespace: logging
    labels:
      k8s-app: filebeat
    rules:
      - apiGroups: [""]
        resources:
          - namespaces
          - pods
          - nodes
        verbs:
          - get
          - watch
          - list
      - apiGroups: ["apps"]
        resources:
          - replicasets
        verbs: ["get", "list", "watch"]
      - apiGroups: ["batch"]
        resources:
          - jobs
        verbs: ["get", "list", "watch"]
